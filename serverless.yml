service: serverless-duckdb-bot
useDotenv: true
frameworkVersion: '3'
plugins:
  - serverless-iam-roles-per-function
  - serverless-prune-plugin
  - serverless-plugin-typescript
  - serverless-dotenv-plugin
  - serverless-offline
custom:
  api:
    version: 'v1'
  prune:
    automatic: true
    number: 1
provider:
  name: aws
  runtime: nodejs16.x
  region: ${opt:region, 'us-east-1'}
  stage: 'prd'
  logRetentionInDays: 14
  httpApi:
    payload: '2.0'
    cors: true
#  apiGateway:
#    apiKeys:
#      - DuckDBKey
functions:
  discord-bot:
    handler: index.interactions
    memorySize: 256
    timeout: 29
    # iamRoleStatements:
    #   # Read from input bucket
    #   - Effect: Allow
    #     Action:
    #       - s3:GetObject
    #     Resource: 'arn:aws:s3:::YOUR-S3-INPUT-BUCKET-NAME/*'
    #   - Effect: Allow
    #     Action:
    #       - s3:ListBucket
    #     Resource: 'arn:aws:s3:::YOUR-S3-INPUT-BUCKET-NAME'
    #   # If you want to write to another output bucket, use the statements below
    #   # (or use the same bucket name as the input bucket if you want to write to it as well)
    #   - Effect: Allow
    #     Action:
    #       - s3:ListBucket
    #       - s3:ListBucketMultipartUploads
    #     Resource: 'arn:aws:s3:::YOUR-S3-OUTPUT-BUCKET-NAME'
    #   - Effect: Allow
    #     Action:
    #       - s3:GetObject
    #       - s3:PutObject
    #       - s3:AbortMultipartUpload
    #       - s3:ListMultipartUploadParts
    #     Resource: 'arn:aws:s3:::YOUR-S3-OUTPUT-BUCKET-NAME/*'
    layers:
      - 'arn:aws:lambda:${self:provider.region}:041475135427:layer:duckdb-nodejs-x86:3'
    events:
      - httpApi:
          path: '/event'
          method: post
package:
  individually: true
